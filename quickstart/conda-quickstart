#!/usr/bin/env bash

PY_VER=2
CONDA_ENV=distarray
INSTALL_MODE=install
PROMPT_USER=false
TEST_INSTALL=false

usage() {
    echo "usage: conda-quickstart [options] <inputs>"
    echo "-------------------------------------------------------------------------"
    echo "OPTIONS"
    echo "--pyversion <arg>     select which version of python to use options = (2, 3) DEFAULT 2"
    echo "-h | --help           display usage message"
    echo "-n | --name <arg>     set name of created conda environment to <arg> DEFAULT distarray"
    echo "-d | --develop        perform a development install of distarray"
    echo "-y | --yes            do not ask for confirmation"
    echo "-t | --test           test distarray after installation"
}

while [[ "$1" != "" ]]; do
    case $1 in
    -n | --name )
                shift
                CONDA_ENV=$1
                ;;
    -d | --develop )
                INSTALL_MODE=develop
                ;;
    -h | --help )
                usage
                exit
                ;;
    -y | --yes )
                PROMPT_USER=true
                ;;
    --pyversion )
                shift
                PY_VER=$1
                ;;
    -t | --test )
                TEST_INSTALL=true
                ;;
             *  )
                usage
                exit 1
    esac
    shift
done

install_openmpi() {
    if  command -v port >/dev/null 2>&1 ; then
        sudo port install openmpi
        sudo port select --set mpi openmpi-mp-fortran
        return 0
    elif  command -v brew >/dev/null 2>&1 ; then
        brew install openmpi
        return 0
    else
        echo "Could not install OpenMPI: no working installation of homebrew or macports found."
        return 1
    fi
}

resolve_mpicc() {
    if  command -v mpicc >/dev/null 2>&1 ; then
        echo "Working MPI installation found at `which mpicc`."
        return 0
    else
        install_openmpi
        r_stat=$?
        if [[ $r_stat != 0 ]]; then
            return 1
        else
            return 0
        fi
    fi
}

resolve_conda() {
    if  command -v conda >/dev/null 2>&1 ; then
        echo "Working conda installation found at `which conda`."
        return 0
    else
        echo "No working installation of Anaconda/Miniconda found."
        return 1
    fi
}

install_osx() {
    conda create -n $CONDA_ENV python=$PY_VER numpy ipyparallel notebook cython sphinx=1.3 mock matplotlib
    source activate $CONDA_ENV
    pip install mpi4py
    pip install sphinxcontrib-programoutput
    python setup.py $INSTALL_MODE
    source deactivate
    return 0
}

install_linux() {
    conda create -n $CONDA_ENV python=$PY_VER mpi4py numpy ipyparallel notebook cython sphinx=1.3 mock matplotlib
    source activate $CONDA_ENV
    pip install sphinxcontrib-programoutput
    python setup.py $INSTALL_MODE
    source deactivate
    return 0
}

exit_install() {
    if [[ $1 != 0 ]]; then
        echo "Aborting DistArray quickstart install. Please refer to the quickstart instructions for troubleshooting"
        exit 1
    else
        return 0
    fi
}

test_install() {
    source activate $CONDA_ENV
    dacluster start
    python -m distarray.run_tests
    dacluster stop
    return 0
}

prompt_user() {
    echo "Press any key to continue installation with the provided options. Ctrl+C to abort."
    read -n 1
}

cat quickstart/README.rst
usage

if [[ "$(uname)" == "Darwin" ]]; then

    if [ "$PROMPT_USER" = true ] ; then
        prompt_user
    fi

    resolve_mpicc
    r_stat=$?
    exit_install $r_stat

    resolve_conda
    r_stat=$?
    exit_install $r_stat

    install_osx
    r_stat=$?
    exit_install $r_stat
else

    echo "Linux support for DistArray quickstart is experimental and may not produce desired results."
    if [ "$PROMPT_USER" = true ] ; then
        prompt_user
    fi

    resolve_conda
    r_stat=$?
    exit_install $r_stat

    install_linux
    r_stat=$?
    exit_install $r_stat
fi

if [ "$TEST_INSTALL" = true ] ; then
    echo "Install Complete. Testing DistArray"
    echo "--------------------------------------------------------------------------------------"
    test_install
    echo "--------------------------------------------------------------------------------------------"
    echo "Installation complete. Use source activate $CONDA_ENV to begin working with DistArray."
    echo "--------------------------------------------------------------------------------------------"
else
    echo "--------------------------------------------------------------------------------------------"
    echo "Installation complete. Use source activate $CONDA_ENV to begin working with DistArray."
    echo "Test your installation by running dacluster start followed by python -m distarray.run_tests."
    echo "--------------------------------------------------------------------------------------------"
fi
